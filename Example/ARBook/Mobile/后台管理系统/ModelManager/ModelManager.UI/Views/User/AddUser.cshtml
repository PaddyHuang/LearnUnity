@{
    ViewBag.Title = "添加用户信息";
    Layout = "~/Views/Shared/IframLayout.cshtml";
}


@section styles {
    <style>

        .roleselected {
            background-color: #5FB878;
        }


    </style>
    
    
}

<div style="margin: 15px;">
    <form class="layui-form" method="post" id="form" action="">


        <div class="layui-tab layui-tab-card">
            <ul class="layui-tab-title">
                <li class="layui-this">基本信息</li>
         
                <li>角色分配</li>
            </ul>

            <div class="layui-tab-content">
                <div class="layui-tab-item layui-show">

                    <div class="layui-form-item">
                        <label class="layui-form-label">账号</label>
                        <div class="layui-input-block">
                            <input type="text" name="username" lay-verify="required" autocomplete="off" placeholder="用户名" class="layui-input">
                            <input type="hidden" id="ID" name="ID" value="@ViewBag.ID" />
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">真实姓名</label>
                        <div class="layui-input-block">
                            <input type="text" name="name" lay-verify="required" autocomplete="off" placeholder="填写真是姓名" class="layui-input">

                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">昵称</label>
                        <div class="layui-input-block">
                            <input type="text" name="nickname" autocomplete="off" placeholder="请设定昵称" class="layui-input">

                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label class="layui-form-label">手机号码</label>
                        <div class="layui-input-block">
                            <input type="text" name="phone" lay-verify="phone" autocomplete="off" placeholder="手机号码不能为空" class="layui-input">
                        </div>
                    </div>     
                </div>
               
                <div class="layui-tab-item">
                    <div class="layui-form-item">                                          
                            <div class="layui-btn-group demoTest" id="rolegroup" style="margin-top: 5px;">                                
                            </div>                                                                   
                    </div>
                </div>
            </div>    
        </div>
        <div class="layui-form-item">
            <label class="layui-form-label"></label>
            <div class="layui-input-block">
                <button class="layui-btn" lay-submit="" lay-filter="productadd">保存并提交</button>
                <button class="layui-btn" lay-submit="" lay-filter="productsave">保存草稿</button>
                <button type="reset" class="layui-btn layui-btn-primary">重置</button>
            </div>
        </div>
  
    </form>
</div>




@section scripts{

    @*<script src="~/Content/layui/extension/js/begtable.js"></script>*@

    <script>
    layui.config({
        base: '../../Content/layui/extension/js/',
        v: new Date().getTime()
    }).use(['form', 'layedit', 'laydate', 'common', 'upload'], function () {

        var form = layui.form
            , $ = layui.jquery
            , layer = layui.layer
            , layedit = layui.layedit
            , laydate = layui.laydate
            , common = layui.common
            , upload = layui.upload
        , active = {
            set: function (othis) {
                var THIS = 'layui-bg-normal'
                , key = othis.data('key')
                , options = {};


                if (othis.hasClass('roleselected')) {
                    othis.removeClass('roleselected');
                }
                else
                {
                    othis.addClass('roleselected');
                }
            }
        };

        form.verify({
            username: function (value, item) { //value：表单的值、item：表单的DOM对象
                if (!new RegExp("^[a-zA-Z0-9_\u4e00-\u9fa5\\s·]+$").test(value)) {
                    return '用户名不能有特殊字符';
                }
                if (/(^\_)|(\__)|(\_+$)/.test(value)) {
                    return '用户名首尾不能出现下划线\'_\'';
                }
                if (/^\d+\d+\d$/.test(value)) {
                    return '用户名不能全为数字';
                }
            }

            //我们既支持上述函数式的方式，也支持下述数组的形式
            //数组的两个值分别代表：[正则匹配、匹配不符时的提示文字]
              , pass: [
                /^[\S]{6,12}$/
                , '密码必须6到12位，且不能出现空格'
              ]

               , template: function (value, item) {
                   if (!value || value.length == 0) {
                       return '模板信息，不能为空'
                   }

               }
        });


        //监听提交
        form.on('submit(productadd)', function (data) {



            var roleID = "";



            $('.roleselected').each(function () {



                var id =  $(this).data("key")

                if (id && id != '')
                {
                    roleID +=(id+ ',')
                }


            })

            data.field.RoleID = roleID



            //layer.msg(JSON.stringify(data.field));

            //console.log("tu" + JSON.stringify(data.field));


           // return false;

            // $(this).text()
            $.ajax({
                type: "POST",
                url: common.renderUrl('@Url.Action("AddUser", "User")', {

                    }),
                    data: data.field,
                    dataType: "json",
                    beforeSend: function (xhr) {
                        layer.load(0);
                        //  xhr.setRequestHeader('Content-Type', 'multipart/form-data');
                    },
                    success: function (res) {
                        if (res.Code == 0) {
                            layer.msg("添加成功，用户初始密码为123456");
                        }
                        else {
                            layer.msg(res.ErrorDesc);
                        }
                      //  layer.closeAll();
                    },
                    complete: function (xhr, status) {
                        layer.closeAll("loading");
                    },

                    error: function (xmlHttpRequest, textStatus, errorThrown) {

                       // layer.closeAll();
                    }
                });


                return false;
                title: '最终的提交信息'
            });



            $(document).on('click', '.demoTest .layui-btn', function () {

                var othis = $(this), type = othis.data('type');
                active[type] ? active[type].call(this, othis) : '';


            })
   


            $(function () {
                $.ajax({
                    type: "POST",
                    url: common.renderUrl('@Url.Action("GetAllRoleList", "Role")', {
                            id:''
                        }),
                    // async: false, //_config.async,
                    dataType: 'json',
                    beforeSend: function () {
                        layer.load(0);
                    },
                    success: function (result, status, xhr) {

                        //console.log(JSON.stringify(result));
                        //layer.msg("获取结果：" + JSON.stringify(result));
                        
                        if (result.Code == 0)
                        {
                            html = "";
                            for (var i = 0; i < result.Result.length; i++)
                            {
                                html += '<div class="layui-btn layui-btn-sm "  data-type="set" data-key="' + result.Result[i].id + '" data-value="' + result.Result[i].RoleValue + '">' + result.Result[i].NAME + '</div>'
                            }
                            $('#rolegroup').html("").html(html);
                        }


                    },
                    error: function (xhr, status, error) {

                       
                    },
                    complete: function (xhr, status) {
                        layer.closeAll("loading");
                    }
                });



            })


        });


    </script>


}

