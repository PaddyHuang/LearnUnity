
@{

    Layout = "~/Views/Shared/IframLayout.cshtml";


    ViewBag.Title = "ShowList";
}
<div class="admin-main">
    <blockquote class="layui-elem-quote">
        <a href="javascript:;" class="layui-btn layui-btn-small" id="add">
            <i class="layui-icon">&#xe608;</i> 添加模型
        </a>
        <a href="#" class="layui-btn layui-btn-small" id="import">
            <i class="layui-icon">&#xe608;</i> 导入模型
        </a>
        <a href="#" class="layui-btn layui-btn-small">
            <i class="fa fa-shopping-cart" aria-hidden="true"></i> 导出模型
        </a>
        <a href="#" class="layui-btn layui-btn-small" id="getSelected">
            <i class="fa fa-shopping-cart" aria-hidden="true"></i> 获取全选信息
        </a>
        <div class="layui-form" style="float:right;">
            <div class="layui-form-item" style="margin:0;">
                <label class="layui-form-label">关键字</label>
                <div class="layui-input-inline">
                    <input type="text" name="userkeyword" id="userkeyword" placeholder="关键字" autocomplete="off" class="layui-input">
                </div>

                <label class="layui-form-label">模型名称</label>
                <div class="layui-input-inline">
                    <input type="text" name="name" id="name" placeholder="名称" autocomplete="off" class="layui-input">
                </div>
                <div class="layui-input-inline" style="padding:0;">
                    <div lay-filter="search" class="layui-btn" lay-submit="" id="search"><i class="fa fa-search" aria-hidden="true"></i> 查询</div>
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </blockquote>
    <fieldset class="layui-elem-field">
        <legend>数据列表</legend>
        <div class="layui-field-box layui-form" id="content">
            <table class="layui-hide" id="test" lay-filter="demo"></table>
        </div>
    </fieldset>


</div>


<script type="text/html" id="barDemo">
    <a class="layui-btn layui-btn-primary layui-btn-xs" data-id="{{d.ID}}" lay-event="detail">查看</a>
    <a class="layui-btn layui-btn-xs" data-id="{{d.ID}}" lay-event="edit">编辑</a>
    @*<a class="layui-btn layui-btn-danger layui-btn-xs" data-id="{{d.ID}}" lay-event="del">删除</a>*@
</script>
@*<blockquote class="layui-elem-quote layui-quote-nm" id="footer">layui {{ layui.v }} 提供强力驱动</blockquote>*@
@section scripts{
    
    <script>


    layui.config({
        base: '../../../Content/layui/extension/js/',
        version: '@DateTime.Now.Ticks' //为了更新 js 缓存，可忽略
    });

    layui.use(['laydate', 'laypage', 'layer', 'table', 'carousel', 'upload', 'element', 'common','md5'], function () {
        var laydate = layui.laydate //日期
        , laypage = layui.laypage //分页
        layer = layui.layer //弹层
          , $ = layui.jquery
        , table = layui.table //表格
        , carousel = layui.carousel //轮播
        , upload = layui.upload //上传
        , element = layui.element //元素操作
        ,md5 = layui.md5
        , common = layui.common;

        try
        {
            var password = md5.MD5_Encrypt("123456")
        }
        catch (ex)
        {
            console.log(ex.message);
        }

    

        //执行一个 table 实例
      var tablefn =  table.render({
            elem: '#test'
          
          , url: common.renderUrl('@Url.Action("GetUIModelList", "Model")', {
              name:encodeURIComponent($('#name').val()),
              keyword: encodeURIComponent($('#userkeyword').val())

          }) //数据接口
          , page: true //开启分页
          , cols: [[ //表头
            { field: 'ID', title: 'ID', width: 160, sort: true, fixed: 'left' }
            , { field: 'Name', title: '模型名称', width: 120 }
            , { field: 'ThumbUrl', title: '图片地址', }
            , { field: 'Url', title: '详情地址' }
            , { field: 'Keywords', title: '关键字' }
            , { field: 'ModelcontentPath', title: '模板详情', }
            , { field: 'BinModelcontentPath', title: '模板详情', }
            , { field: 'Desc', title: '简要内容', sort: true }
            , { field: 'FlagDesc', title: '状态', width: 80, sort: true }
            , { field: 'CreateTime', title: '创建时间', width: 135 }
            , { field: 'UpdateTime', title: '更新时间', width: 135, sort: true }
            , { fixed: 'right', width: 165, align: 'center', toolbar: '#barDemo' }
          ]]
       });


        $(document).bind("keydown", function (e) {

            // 兼容FF和IE和Opera

            var theEvent = e || window.event;

            var code = theEvent.keyCode || theEvent.which || theEvent.charCode;

            if (code == 13) {

                //回车执行查询

                $("#search").click();

            }

        });


        $('#search').click(function () {


           
            //执行一个 table 实例
            tablefn =   table.render({
                elem: '#test'

               , url: common.renderUrl('@Url.Action("GetUIModelList", "Model")', {
                   name:encodeURIComponent( $('#name').val()),
                   keyword:encodeURIComponent( $('#userkeyword').val())

               }) //数据接口
               , page: true //开启分页
               , cols: [[ //表头
                 { field: 'ID', title: 'ID', width: 160, sort: true, fixed: 'left' }
                 , { field: 'Name', title: '模型名称', width: 120 }
                 , { field: 'ThumbUrl', title: '图片地址', }
                 , { field: 'Url', title: '详情地址' }
                 , { field: 'Keywords', title: '关键字' }
                 , { field: 'ModelcontentPath', title: '模板详情', }
                 , { field: 'BinModelcontentPath', title: '模板详情', }
                 , { field: 'Desc', title: '简要内容', sort: true }
                 , { field: 'FlagDesc', title: '状态', width: 80, sort: true }
                 , { field: 'CreateTime', title: '创建时间', width: 135 }
                 , { field: 'UpdateTime', title: '更新时间', width: 135, sort: true }
                 , { fixed: 'right', width: 165, align: 'center', toolbar: '#barDemo' }
               ]]
            });
        })

        var editBoxIndex = -1;
        //监听工具条
        table.on('tool(demo)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
            var data = obj.data //获得当前行数据
            , layEvent = obj.event; //获得 lay-event 对应的值


                if (layEvent === 'del') {
                layer.confirm('真的删除行么', function (index) {
                    $.ajax({
                        type: "GET",
                        url: common.renderUrl('@Url.Action("Delete", "Model")', {
                            id: data.ID
                        }),
                        data: {


                        },
                        dataType: "json",
                        beforeSend: function (xhr) {
                            layer.load();
                           
                        },
                        success: function (res) {
                           // layer.msg("提交成功:" + JSON.stringify(res));
                            layer.closeAll();
                            tablefn.reload({
                                where: {
                                    //name: $('#name').val(),
                                    //keyword: $('#userkeyword').val()
                                }


                            })
                        },
                        complete: function (res) {
                           // console.log("提交完成:" + JSON.stringify(res))                    
                            layer.close("loading");

                            obj.del(); //删除对应行（tr）的DOM结构
                        },
                        error: function (xmlHttpRequest, textStatus, errorThrown) {
                            layer.close("loading");
                            layer.closeAll();
                        }
                    });
                  
                    layer.close(index);



                    //向服务端发送删除指令
                });
            } else if (layEvent === 'edit' || layEvent === 'detail') {

                if (editBoxIndex !== -1)
                    return;

                editBoxIndex = layer.open({
                    type: 2,
                    title: '添加、修改模型',
                    shadeClose: false,
                    shade: 0.8,
                    offset: ['10px', '3%'],
                    area: ['90%', '90%'],
                    content: common.renderUrl('@Url.Action("Detail", "Model")', {
                        id: data.ID

                    }), //iframe的url
                    end: function () {
                        editBoxIndex = -1;
                        tablefn.reload({
                            where: {
                                //name: $('#name').val(),
                                //keyword: $('#userkeyword').val()
                            }


                        })

                        //location.reload();
                    }
                });



            }
        });


        var addBoxIndex = -1;
        $('#add').on('click', function () {
                if (addBoxIndex !== -1)
                    return;

                addBoxIndex = layer.open({
                    type: 2,
                    title: '添加、修改模型',
                    shadeClose: false,
                    shade: 0.8,
                    offset: ['10px', '3%'],
                    area: ['90%', '90%'],
                    content: common.renderUrl('@Url.Action("Add", "Model")'), //iframe的url
                end: function () {
                    addBoxIndex = -1;
                    tablefn.reload({
                        where: {
                            //name: $('#name').val(),
                            //keyword: $('#userkeyword').val()
                        }


                    })
                   // location.reload();
                }
            });
        });


        var importBoxIndex = -1;


        $('#import').on("click", function () {
            if (importBoxIndex !== -1)
                return;

            importBoxIndex = layer.open({
                type: 2,
                title: '添加、修改模型',
                shadeClose: false,
                shade: 0.8,
                offset: ['10px', '3%'],
                area: ['90%', '90%'],
                content: common.renderUrl('@Url.Action("Import", "Model")'), //iframe的url
                end: function () {
                    addBoxIndex = -1;
                    tablefn.reload({
                        where: {
                            //name: $('#name').val(),
                            //keyword: $('#userkeyword').val()
                        }


                    })
                }
            });


        });


    });
</script>
    }